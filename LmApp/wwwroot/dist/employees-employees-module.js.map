{"version":3,"sources":["./src/app/employees/employees-edit/employees-edit.component.html","./src/app/employees/employees-list/employees-list.component.html","./src/app/employees/employees.component.html","./src/app/employees/employees-edit/employees-edit.component.css","./src/app/employees/employees-edit/employees-edit.component.ts","./src/app/employees/employees-list/employees-list.component.css","./src/app/employees/employees-list/employees-list.component.ts","./src/app/employees/employees-routing.module.ts","./src/app/employees/employees.component.css","./src/app/employees/employees.component.ts","./src/app/employees/employees.module.ts","./src/app/employees/employees.service.ts"],"names":[],"mappings":"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","file":"employees-employees-module.js","sourcesContent":["export default \"<p>Add/Edit employee</p>\\r\\n\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n    <form *ngIf=\\\"formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n        <div class=\\\"example-container\\\">\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Name\\\" formControlName=\\\"name\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('name').touched && formGroup.get('name').errors && formGroup.get('name').errors.required\\\">\\r\\n                    Name required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Position\\\" formControlName=\\\"position\\\" type=\\\"text\\\">\\r\\n\\r\\n                <mat-error *ngIf=\\\"formGroup.get('position').touched && formGroup.get('position').errors && formGroup.get('position').errors.required\\\">\\r\\n                    Position required!\\r\\n                </mat-error>\\r\\n            </mat-form-field>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"example-button-row\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">Save</button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" [routerLink]='routerLink'>Cancel</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</mat-card>\\r\\n\"","export default \"<h1>Employees</h1>\\r\\n\\r\\n<p>Many employees in the list</p>\\r\\n\\r\\n<div class=\\\"example-button-row\\\">\\r\\n    <button mat-raised-button [routerLink]='[\\\"../edit\\\"]' color=\\\"primary\\\">Add</button>\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n<mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n\\r\\n<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"position\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:21%\\\"> Position </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    Action Column\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef style=\\\"width:10%\\\"> Action </th>\\r\\n        <td mat-cell *matCellDef=\\\"let employee\\\">\\r\\n            <button mat-icon-button matTooltip=\\\"Edit\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\" [routerLink]=\\\"['../edit', employee.id]\\\">edit</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button mat-icon-button matTooltip=\\\"Delete\\\" [matTooltipPosition]=\\\"'after'\\\">\\r\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon \\\" (click)=\\\"deleteEmployee(employee)\\\">delete</mat-icon>\\r\\n            </button>\\r\\n        </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"!employees\\\"></mat-progress-bar>\\r\\n\"","export default \"\\n<router-outlet></router-outlet>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy9lbXBsb3llZXMtZWRpdC9lbXBsb3llZXMtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { EmployeesService } from '../employees.service';\r\nimport { Employee } from '../employees.models';\r\n\n@Component({\n  selector: 'app-employees-edit',\n  templateUrl: './employees-edit.component.html',\n  styleUrls: ['./employees-edit.component.css']\n})\nexport class EmployeesEditComponent implements OnInit {\n    private routerLink: string = '../list';\n\n    private employeeID: number;\n\n    private isEdit: boolean = false;\n\n    public formGroup: FormGroup;\n\n    constructor(\n        private router: Router,\n        private route: ActivatedRoute,\n        private employeesService: EmployeesService,\n        private formBuilder: FormBuilder) { }\n\n    ngOnInit() {\n\n        this.employeeID = parseInt(this.route.snapshot.params['id']);\n\n        if (this.employeeID) {\n            this.routerLink = '../../list';\n\n            this.employeesService.getEmployee(this.employeeID).subscribe(res => {\n                this.initForm(res);\n                this.isEdit = true;\n            });\n        }\n        else {\n            this.initForm(<Employee>{});\n        }\n    }\n\n    save() {\n        Object.keys(this.formGroup.controls).forEach(control => {\n            this.formGroup.get(control).markAsTouched();\n        });\n\n        if (this.formGroup.valid) {\n            let employee = this.formGroup.value as Employee;\n            employee.name = employee.name;\n\n            if (this.isEdit) {\n                employee.id = this.employeeID;\n\n                this.employeesService.modifyEmployee(employee).subscribe(res => {\n                    this.router.navigate(['/employees']);\n                });\n            } else {\n\n                this.employeesService.saveEmployee(employee).subscribe(res => {\n                    this.router.navigate(['/employees']);\n                });\n            }\n        }\n    }\n\n    initForm(employee: Employee) {\n        this.formGroup = this.formBuilder.group({\n            name: [employee.name, Validators.required],\n            position: [employee.position, Validators.required]\n        });\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy9lbXBsb3llZXMtbGlzdC9lbXBsb3llZXMtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employees.models';\r\nimport { EmployeesService } from '../employees.service';\r\nimport { MatTableDataSource } from '@angular/material';\r\n\n@Component({\n  selector: 'app-employees-list',\n  templateUrl: './employees-list.component.html',\n  styleUrls: ['./employees-list.component.css']\n})\nexport class EmployeesListComponent implements OnInit {\n\n    public displayedColumns: string[] = ['name', 'position', 'action'];\n    public movies: Employee[];\n\n    public dataSource;\n    public isloading = false;\n\n    constructor(private employeesService: EmployeesService) { }\n\n    ngOnInit() {\n        this.loadEmployees();\n    }\n\n\n\n    async loadEmployees() {\n        try {\n            this.employeesService.listEmployees().subscribe(res => {\n                this.movies = res;\n                this.dataSource = new MatTableDataSource(this.movies);\n                this.isloading = true;\n            });\n        } catch (err) {\n            console.error(`this is not good: ${err.Message}`);\n            this.isloading = false;\n        }\n    }\n\n    applyFilter(filterValue: string) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n\n    deleteEmployee(employee: Employee) {\n        this.employeesService.deleteEmployee(employee.id).subscribe(x => {\n            this.loadEmployees();\n        });\n    }\n\n}\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EmployeesComponent } from './employees.component';\r\nimport { EmployeesListComponent } from './employees-list/employees-list.component';\r\nimport { EmployeesEditComponent } from './employees-edit/employees-edit.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: EmployeesComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'list', pathMatch: 'full' },\r\n            { path: 'list', component: EmployeesListComponent },\r\n            { path: 'edit/:id', component: EmployeesEditComponent },\r\n            { path: 'edit', component: EmployeesEditComponent },\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class EmployeesRoutingModule {\r\n    static routedComponents = [EmployeesComponent, EmployeesListComponent, EmployeesEditComponent];\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlcy9lbXBsb3llZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css']\n})\nexport class EmployeesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CoreModule } from '../core/core.module';\nimport { AngularMaterialModule } from '../shared/angular-material.module';\n\nimport { EmployeesRoutingModule } from './employees-routing.module';\n\nimport { EmployeesService } from './employees.service';\n\n@NgModule({\n    declarations: [EmployeesRoutingModule.routedComponents],\n    imports: [\n        CommonModule,\n        EmployeesRoutingModule,\n        AngularMaterialModule,\n        CoreModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    providers: [EmployeesService],\n})\nexport class EmployeesModule { }\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { ApplicationService } from \"../core/services/application.service\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Employee } from \"./employees.models\";\r\n\r\n@Injectable()\nexport class EmployeesService {\n\n    constructor(\n        private http: HttpClient,\n        private applicationService: ApplicationService) { }\n\n    getEmployee(id: number) {\n        return this.http.get<Employee>(`${this.applicationService.baseUrl}api/Employees/${id}`);\n    }\n\n    listEmployees() {\n        return this.http.get<Employee[]>(`${this.applicationService.baseUrl}api/Employees`);\n    }\n\n    saveEmployee(employee: Employee) {\n        return this.http.post(`${this.applicationService.baseUrl}api/Employees`, employee);\n    }\n\n    modifyEmployee(employee: Employee) {\n        return this.http.put(`${this.applicationService.baseUrl}api/Employees/${employee.id}`, employee);\n    }\n\n    deleteEmployee(id: number) {\n        return this.http.delete<any>(`${this.applicationService.baseUrl}api/Employees/${id}`);\n    }\n}\n"],"sourceRoot":"webpack:///"}